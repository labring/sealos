name: metering e2e test
env:
  # Common versions
  GO_VERSION: "1.20"

on:
  workflow_dispatch:
  push:
    branches: [ "ci-e2e-metering" ]
#    paths:
#      - "controllers/metering/**"
#      - "!.github/workflows/controllers.yml"
#      - "!**/*.md"
#      - "!**/*.yaml"
jobs:
  metering_e2e_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Auto install sealos
        uses: labring/sealos-action@v0.0.2
        with:
          sealosVersion: 4.1.5-alpha2
          buildah: true
          debug: true
          sealctl: false
      - name: Auto print sealos version
        uses: labring/sealos-action@v0.0.2
        with:
          type: version
      - name: Auto install k8s using sealos
        uses: labring/sealos-action@v0.0.2
        with:
          image: labring/kubernetes:v1.25.0 labring/helm:v3.8.2 labring/calico:v3.24.1
          debug: true
          type: run-k8s

      - name: After k8s operation
        run: |
          mkdir -p $HOME/.kube
          sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config
          NODENAME=$(sudo -u root kubectl get nodes -ojsonpath='{.items[0].metadata.name}' )
          NODEIP=$(sudo -u root kubectl get nodes -ojsonpath='{.items[0].status.addresses[0].address}' )
          echo "NodeName=$NODENAME,NodeIP=$NODEIP"
          sudo -u root kubectl taint node $NODENAME node-role.kubernetes.io/control-plane-
          
          sleep 60
          sudo -u root crictl ps -a
          sudo -u root cat /etc/hosts
          sudo -u root systemctl status kubelet
          sudo -u root kubectl get nodes 
          sudo -u root kubectl get nodes 
          sudo -u root kubectl get pods -A
      - name: install CRD metering
        working-directory: ./controllers/metering
        run: |
          make pre-deploy
          sudo -u root kubectl apply -f ./deploy/manifests/deploy.yaml
      - name: install CRD account
        working-directory: ./controllers/account
        run: |
          make pre-deploy
          sudo -u root kubectl create namespace account-system
          sudo -u root kubectl create secret generic payment-secret -n account-system
          sudo -u root kubectl apply -f ./deploy/manifests/deploy.yaml
      - name: install CRD infra
        working-directory: ./controllers/infra
        run: |
          make pre-deploy
          sudo -u root kubectl apply -f ./deploy/manifests/deploy.yaml 
          sleep 30
      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install dependence
        working-directory: ./controllers/metering
        run: |
          go mod tidy
          sudo -u root kubectl get pod -A 
          sudo -u root kubectl describe pod -n account-system
      -  name: e2e Test
         working-directory: ./controllers/metering
         run: |
           export METERINGNAME = sudo -u root kubectl get pod -n metering-system|grep metering |awk '{print $1}'
           trap "sudo -u root kubectl logs $METERINGNAME -n metering-system" EXIT
           go test ./testdata/e2e/metering_test.go -v