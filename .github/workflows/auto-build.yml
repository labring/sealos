name: Auto build image
on:
  issue_comment:
    types:
      - created
jobs:
  issue_comment:
    name: Auto build image
    if: startswith(github.event.comment.body, '/imagebuild')
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 # v1

      - name: Check outputs
        env:
          owner: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        run: |
          commentbody="${{github.event.comment.body}}"
          version=`echo "$commentbody"|cut -d" " -f2`
          echo $version
          git clone https://github.com/sealyun/cloud-kernel.git  && cd cloud-kernel && git checkout refactor && cd ..
          ln -s cloud-kernel/runtime runtime
          ln -s cloud-kernel/hack/containerd.sh  containerd.sh
          sh containerd.sh $version amd64 $owner
          sh containerd.sh $version arm64 $owner
          ./buildah login --username $owner --password $password ghcr.io
          ./buildah push ghcr.io/$owner/oci-kubernetes-amd64:$version
          ./buildah push ghcr.io/$owner/oci-kubernetes-arm64:$version
          ./buildah manifest create ghcr.io/$owner/oci-kubernetes:$version
          ./buildah manifest add ghcr.io/$owner/oci-kubernetes:$version docker://ghcr.io/$owner/oci-kubernetes-amd64:$version
          ./buildah manifest add ghcr.io/$owner/oci-kubernetes:$version docker://ghcr.io/$owner/oci-kubernetes-arm64:$version
          ./buildah manifest push --all ghcr.io/$owner/oci-kubernetes:$version docker://ghcr.io/$owner/oci-kubernetes:$version
      - name: Auto build image
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Image build successfully!
