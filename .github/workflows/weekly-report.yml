name: Weekly Community Report

on:
  schedule:
    # Run every Monday at 09:00 UTC (02:00 PST, 17:00 CST)
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      end_date:
        description: 'End date of the week (YYYY-MM-DD, Saturday). If empty, uses last Saturday.'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  generate-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Generate weekly report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -n "${{ github.event.inputs.end_date }}" ]; then
            bash scripts/weekly-report.sh "${{ github.event.inputs.end_date }}"
          else
            bash scripts/weekly-report.sh
          fi

      - name: Check if report was generated
        id: check_report
        run: |
          if [ -n "${{ github.event.inputs.end_date }}" ]; then
            END_DATE="${{ github.event.inputs.end_date }}"
          else
            END_DATE=$(date -d "last saturday" +%Y-%m-%d)
          fi
          
          REPORT_FILE="reports/weekly/${END_DATE}-weekly-report.md"
          
          if [ -f "$REPORT_FILE" ]; then
            echo "report_exists=true" >> $GITHUB_OUTPUT
            echo "report_file=$REPORT_FILE" >> $GITHUB_OUTPUT
            echo "end_date=$END_DATE" >> $GITHUB_OUTPUT
            
            # Get summary stats for PR description
            if [ -f "$REPORT_FILE" ]; then
              PR_COUNT=$(grep -o "Total PRs Merged:" "$REPORT_FILE" | wc -l)
              ISSUE_COUNT=$(grep -o "Total Issues Created:" "$REPORT_FILE" | wc -l)
              echo "Generated report for week ending $END_DATE" >> $GITHUB_STEP_SUMMARY
              echo "Report saved to: $REPORT_FILE" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "report_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check_report.outputs.report_exists == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs(community): add weekly report for week ending ${{ steps.check_report.outputs.end_date }}"
          title: "📊 Weekly Community Report - Week Ending ${{ steps.check_report.outputs.end_date }}"
          body: |
            ## Weekly Community Report
            
            This PR adds the automatically generated weekly community report for the week ending **${{ steps.check_report.outputs.end_date }}**.
            
            ### What's Included
            - 📈 PR and issue activity statistics
            - 👥 Top contributor highlights  
            - 🚀 List of merged pull requests
            - 🐛 New issues created
            - 📊 Community engagement metrics
            
            ### Report Location
            `${{ steps.check_report.outputs.report_file }}`
            
            This report was automatically generated by the weekly-report workflow to provide transparency and recognition for our community contributors.
            
            ---
            *Generated automatically by [weekly-report.yml](https://github.com/labring/sealos/blob/main/.github/workflows/weekly-report.yml)*
          branch: weekly-report-${{ steps.check_report.outputs.end_date }}
          delete-branch: true
          labels: |
            documentation
            community
            weekly-report
          draft: false
          signoff: true
          committer: sealos-bot <sealos-bot@sealos.io>
          author: sealos-bot <sealos-bot@sealos.io>

      - name: Report generation summary
        run: |
          if [ "${{ steps.check_report.outputs.report_exists }}" == "true" ]; then
            echo "✅ Weekly report generated successfully for week ending ${{ steps.check_report.outputs.end_date }}"
            echo "📄 Report file: ${{ steps.check_report.outputs.report_file }}"
            echo "🔄 Pull request created for review"
          else
            echo "❌ No report was generated - please check the logs for errors"
            exit 1
          fi