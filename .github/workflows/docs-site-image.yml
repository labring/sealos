name: Build and push Sealos Docs Site Docker image

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "docs/**"

jobs:
  build-docs-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.DOCKER_USERNAME }}/sealos-site
            ghcr.io/${{ github.repository_owner }}/sealos-site
            registry.cn-hangzhou.aliyuncs.com/labring4docker/sealos-site

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      - name: Login to Aliyun Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALI_HUB_USERNAME }}
          password: ${{ secrets.ALI_HUB_PASSWORD }}

      - name: Build and push Docker images to ghcr.io and Aliyun Hub
        uses: docker/build-push-action@v5
        with:
          context: ./docs
          file: ./docs/website/Dockerfile
          push: true
          build-args: |
            BD_TOKEN=${{ secrets.BD_TOKEN }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update-docs-image:
    needs: build-docs-image
    runs-on: ubuntu-latest
    if: github.repository == 'labring/sealos'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.SEALOS_TOP_KUBE_CONF }}
        with:
          args: rollout restart deployment sealos-site