name: Build (and push) backend images

on:
  workflow_call:
    inputs:
      comp:
        required: false
        type: string
        default: "controller"
      go_version:
        required: false
        type: string
        default: "1.22"
      module_name:
        required: true
        type: string
      module_path:
        required: true
        type: string
      workdir:
        required: true
        type: string
      needs_push:
        required: false
        type: boolean
        default: false
      repo:
        required: true
        type: string
      tag:
        required: true
        type: string
jobs:
  build:
    strategy:
      matrix:
        include:
          - arch: amd64
          - arch: arm64
            runs-on: ubuntu-24.04-arm
    runs-on: ${{ matrix.runs-on || 'ubuntu-24.04' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@v5
        with:
          go-version: ${{ inputs.go_version }}
      # TODO: build the backends in a container (with multistaged Dockerfile)
      - name: Build ${{ inputs.module_name }}
        working-directory: ${{ inputs.workdir }}/${{ inputs.module_path }}
        run: |
          GOARCH=${{ matrix.arch }} TARGETARCH=${{ matrix.arch }} make build
          mv bin/manager "bin/${{ inputs.comp }}-${{ inputs.module_name }}-${{ matrix.arch }}"
          chmod +x "bin/${{ inputs.comp }}-${{ inputs.module_name }}-${{ matrix.arch }}"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.repo }}
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.workdir }}/${{ inputs.module_path }}
          file: ${{ inputs.workdir }}/${{ inputs.module_path }}/Dockerfile
          platforms: linux/${{ matrix.arch }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,"name=${{ inputs.repo }}",name-canonical=true,push-by-digest=${{ inputs.needs_push }},push=${{ inputs.needs_push }}
      - name: Export digest
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
        run: |
          mkdir -p "${{ runner.temp }}/digests"
          touch "${{ runner.temp }}/digests/${DIGEST#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: digests-${{ inputs.comp }}-${{ inputs.module_name }}-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    needs: [build]
    permissions:
      # If this workflow is trigged by `pull_requests` event from forked repository, this job will not be granted any write permission, 
      # so it's safe if we set packages: write here
        contents: read
        packages: write
    name: Merge and push docker images
    if: ${{ inputs.needs_push }}
    uses: ./.github/workflows/merge-and-push.yml
    with:
      image_name: ${{ inputs.repo }}
      tag_name: ${{ inputs.tag }}
      module_name: ${{ inputs.module_name }}
      comp: ${{ inputs.comp }}