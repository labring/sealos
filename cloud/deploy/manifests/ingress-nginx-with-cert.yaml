# Copyright Â© 2022 sealos.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@sealos.io
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - http01:
          ingress:
            class: nginx

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/common-name: cloud.sealos.io
    cert-manager.io/duration: "2160h"
    cert-manager.io/renew-before: "360h"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    #@see: https://github.com/nginxinc/kubernetes-ingress/tree/v2.3.0/examples/rewrites
    # nginx.org/rewrites: "serviceName=desktop-frontend rewrite=/"
  name: nginx-default
  namespace: sealos
spec:
  rules:
    - host: cloud.sealos.io
      http:
        paths:
          - pathType: Prefix
            #@see: https://github.com/kubernetes/ingress-nginx/issues/3122#issuecomment-1125881703
            path: /()(.*)
            backend:
              service:
                name: desktop-frontend
                port:
                  number: 3000
          - pathType: Prefix
            path: /api(/|$)(.*)
            backend:
              service:
                name: service-auth
                port:
                  number: 8080
  tls: # < placing a host in the TLS config will determine what ends up in the cert's subjectAltNames
    - hosts:
        - cloud.sealos.io
      secretName: cloud-sealos-io-cert # < cert-manager will store the created certificate in this secret.

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/common-name: login.sealos.io
    cert-manager.io/duration: "2160h"
    cert-manager.io/renew-before: "360h"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  name: nginx-casdoor
  namespace: sealos
spec:
  rules:
    - host: login.sealos.io
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: casdoor
                port:
                  number: 8000
  tls: # < placing a host in the TLS config will determine what ends up in the cert's subjectAltNames
    - hosts:
        - login.sealos.io
      secretName: login-sealos-io-cert # < cert-manager will store the created certificate in this secret.
