apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: license-frontend
  name: license-frontend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: license-frontend
  namespace: license-frontend
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: license-frontend-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-system-namespace-read-cluster-role
subjects:
  - kind: ServiceAccount
    name: license-frontend
    namespace: license-frontend
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: notification-manager
rules:
- apiGroups:
  - notification.sealos.io
  resources:
  - notifications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: license-frontend-notification-manager-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: notification-manager
subjects:
  - kind: ServiceAccount
    name: license-frontend
    namespace: license-frontend
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: license-frontend-node-reader-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: license-manager-role
subjects:
  - kind: ServiceAccount
    name: license-frontend
    namespace: license-frontend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: license-frontend-config
  namespace: license-frontend
data:
  config.yaml: |-
    addr: :3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: license-frontend
  namespace: license-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: license-frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: license-frontend
    spec:
      serviceAccountName: license-frontend
      containers:
        - name: license-frontend
          env:
            - name: SEALOS_DOMAIN
              value: {{ .cloudDomain }}
            - name: LICENSE_DOMAIN
              value: {{ .licensePurchaseDomain }}
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: license-frontend-secret
                  key: mongodb_uri
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - 'ALL'
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 128Mi
          # do not modify this image, it is used for CI/CD
          image: ghcr.io/labring/sealos-license-frontend:latest
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /api/cronjob/init
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: license-frontend-volume
              mountPath: /config.yaml
              subPath: config.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - license-frontend
              topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: license-frontend-volume
          configMap:
            name: license-frontend-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: license-frontend
  name: license-frontend
  namespace: license-frontend
spec:
  ports:
    - name: http
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: license-frontend