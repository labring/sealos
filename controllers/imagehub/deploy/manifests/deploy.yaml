apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: imagehub
    control-plane: controller-manager
  name: imagehub-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: imagehub-system/imagehub-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: datapacks.imagehub.sealos.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: imagehub-webhook-service
          namespace: imagehub-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: imagehub.sealos.io
  names:
    kind: DataPack
    listKind: DataPackList
    plural: datapacks
    shortNames:
    - dp
    singular: datapack
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DataPack is the Schema for the datapacks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataPackSpec defines the desired state of DataPack
            properties:
              expireTime:
                default: 5m
                type: string
              names:
                items:
                  type: string
                type: array
              type:
                default: base
                enum:
                - base
                - grid
                - detail
                type: string
            type: object
          status:
            description: DataPackStatus defines the observed state of DataPack
            properties:
              codes:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: integer
              datas:
                additionalProperties:
                  description: Data defines all data needs to return
                  properties:
                    ID:
                      type: string
                    arch:
                      type: string
                    description:
                      type: string
                    docs:
                      type: string
                    icon:
                      type: string
                    keywords:
                      items:
                        type: string
                      type: array
                    name:
                      description: base
                      type: string
                    rating:
                      type: integer
                    repoName:
                      description: grid
                      type: string
                    size:
                      format: int64
                      type: integer
                    tags:
                      description: detail
                      items:
                        properties:
                          creatTime:
                            format: date-time
                            type: string
                          metaName:
                            type: string
                          name:
                            type: string
                          size:
                            format: int64
                            type: integer
                        required:
                        - creatTime
                        - metaName
                        - name
                        - size
                        type: object
                      type: array
                    type:
                      type: string
                  type: object
                description: Datas in datapack status
                type: object
            required:
            - codes
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: imagehub-system/imagehub-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: images.imagehub.sealos.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: imagehub-webhook-service
          namespace: imagehub-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: imagehub.sealos.io
  names:
    kind: Image
    listKind: ImageList
    plural: images
    shortNames:
    - img
    singular: image
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Image is the Schema for the images API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ImageSpec defines the desired state of Image
            properties:
              detail:
                description: 'ImageDetailInfo TODO: add limits for ImageDetailInfo'
                properties:
                  ID:
                    description: ID Arch Size should use buildah inspect to get infor.
                    type: string
                  actions:
                    additionalProperties:
                      properties:
                        actionType:
                          type: string
                        actions:
                          type: string
                        cmd:
                          type: string
                        name:
                          description: 'TODO: support more action types ,now just
                            support yaml.'
                          type: string
                      type: object
                    description: Actions todo
                    type: object
                  arch:
                    type: string
                  description:
                    type: string
                  docs:
                    type: string
                  icon:
                    type: string
                  keywords:
                    items:
                      type: string
                    type: array
                  size:
                    format: int64
                    type: integer
                  url:
                    description: URL sealos cloud ui endpoint
                    type: string
                type: object
              name:
                type: string
              type:
                type: string
            type: object
          status:
            description: ImageStatus defines the observed state of Image
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: imagehub-system/imagehub-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: organizations.imagehub.sealos.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: imagehub-webhook-service
          namespace: imagehub-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: imagehub.sealos.io
  names:
    kind: Organization
    listKind: OrganizationList
    plural: organizations
    shortNames:
    - org
    singular: organization
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Organization is the Schema for the organizations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OrganizationSpec defines the desired state of Organization
            properties:
              creator:
                description: Creator is the user who first create this org update
                  manager
                type: string
              manager:
                description: Manager can update org and org's repo/image
                items:
                  type: string
                type: array
              name:
                maxLength: 1024
                type: string
            type: object
          status:
            description: OrganizationStatus defines the observed state of Organization
            properties:
              name:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                maxLength: 1024
                type: string
              repos:
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: imagehub-system/imagehub-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: repositories.imagehub.sealos.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: imagehub-webhook-service
          namespace: imagehub-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: imagehub.sealos.io
  names:
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    shortNames:
    - repo
    singular: repository
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Repository is the Schema for the repositories API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RepositorySpec defines the desired state of Repository, Org
              automatically generated by Name.
            properties:
              name:
                type: string
            required:
            - name
            type: object
          status:
            description: RepositoryStatus defines the observed state of Repository
            properties:
              latestTag:
                properties:
                  creatTime:
                    format: date-time
                    type: string
                  metaName:
                    type: string
                  name:
                    type: string
                  size:
                    format: int64
                    type: integer
                required:
                - creatTime
                - metaName
                - name
                - size
                type: object
              name:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
              tags:
                items:
                  properties:
                    creatTime:
                      format: date-time
                      type: string
                    metaName:
                      type: string
                    name:
                      type: string
                    size:
                      format: int64
                      type: integer
                  required:
                  - creatTime
                  - metaName
                  - name
                  - size
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kuberentes.io/instance: controller-manager
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: imagehub
  name: imagehub-controller-manager
  namespace: imagehub-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: imagehub
  name: imagehub-leader-election-role
  namespace: imagehub-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: imagehub-manager-role
rules:
- apiGroups:
  - imagehub.sealos.io
  resources:
  - datapacks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - imagehub.sealos.io
  resources:
  - datapacks/finalizers
  verbs:
  - update
- apiGroups:
  - imagehub.sealos.io
  resources:
  - datapacks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - imagehub.sealos.io
  resources:
  - images
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - imagehub.sealos.io
  resources:
  - images/finalizers
  verbs:
  - update
- apiGroups:
  - imagehub.sealos.io
  resources:
  - images/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - imagehub.sealos.io
  resources:
  - organizations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - imagehub.sealos.io
  resources:
  - organizations/finalizers
  verbs:
  - update
- apiGroups:
  - imagehub.sealos.io
  resources:
  - organizations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - imagehub.sealos.io
  resources:
  - repositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - imagehub.sealos.io
  resources:
  - repositories/finalizers
  verbs:
  - update
- apiGroups:
  - imagehub.sealos.io
  resources:
  - repositories/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: imagehub
  name: imagehub-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: imagehub
  name: imagehub-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: imagehub
  name: imagehub-leader-election-rolebinding
  namespace: imagehub-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: imagehub-leader-election-role
subjects:
- kind: ServiceAccount
  name: imagehub-controller-manager
  namespace: imagehub-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: imagehub
  name: imagehub-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: imagehub-manager-role
subjects:
- kind: ServiceAccount
  name: imagehub-controller-manager
  namespace: imagehub-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: imagehub
  name: imagehub-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: imagehub-proxy-role
subjects:
- kind: ServiceAccount
  name: imagehub-controller-manager
  namespace: imagehub-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: imagehub
    control-plane: controller-manager
  name: imagehub-controller-manager-metrics-service
  namespace: imagehub-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: imagehub
  name: imagehub-webhook-service
  namespace: imagehub-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: imagehub
    control-plane: controller-manager
  name: imagehub-controller-manager
  namespace: imagehub-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/labring/sealos-imagehub-controller:dev
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: imagehub-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: imagehub
  name: imagehub-serving-cert
  namespace: imagehub-system
spec:
  dnsNames:
  - imagehub-webhook-service.imagehub-system.svc
  - imagehub-webhook-service.imagehub-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: imagehub-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kuberentes.io/name: issuer
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: selfsigned-issuer
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/part-of: imagehub
  name: imagehub-selfsigned-issuer
  namespace: imagehub-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: imagehub-system/imagehub-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: imagehub
  name: imagehub-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: imagehub-webhook-service
      namespace: imagehub-system
      path: /mutate-imagehub-sealos-io-v1-image
  failurePolicy: Fail
  name: mimage.kb.io
  rules:
  - apiGroups:
    - imagehub.sealos.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - images
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: imagehub-webhook-service
      namespace: imagehub-system
      path: /mutate-imagehub-sealos-io-v1-organization
  failurePolicy: Fail
  name: morganization.kb.io
  rules:
  - apiGroups:
    - imagehub.sealos.io
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - organizations
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: imagehub-webhook-service
      namespace: imagehub-system
      path: /mutate-imagehub-sealos-io-v1-repository
  failurePolicy: Fail
  name: mrepository.kb.io
  rules:
  - apiGroups:
    - imagehub.sealos.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - repositories
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: imagehub-system/imagehub-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: imagehub
    app.kubernetes.io/instance: validating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: validatingwebhookconfiguration
    app.kubernetes.io/part-of: imagehub
  name: imagehub-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: imagehub-webhook-service
      namespace: imagehub-system
      path: /validate-imagehub-sealos-io-v1-image
  failurePolicy: Fail
  name: vimage.kb.io
  rules:
  - apiGroups:
    - imagehub.sealos.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - images
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: imagehub-webhook-service
      namespace: imagehub-system
      path: /validate-imagehub-sealos-io-v1-organization
  failurePolicy: Fail
  name: vorganization.kb.io
  rules:
  - apiGroups:
    - imagehub.sealos.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - organizations
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: imagehub-webhook-service
      namespace: imagehub-system
      path: /validate-imagehub-sealos-io-v1-repository
  failurePolicy: Fail
  name: vrepository.kb.io
  rules:
  - apiGroups:
    - imagehub.sealos.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - repositories
  sideEffects: None
