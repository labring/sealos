apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: admission
    control-plane: controller-manager
    sealos.io/component: admission-controller-manager
  name: sealos-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-controller-manager
  namespace: sealos-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-leader-election-role
  namespace: sealos-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    sealos.io/component: admission-controller-manager
  name: admission-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-leader-election-rolebinding
  namespace: sealos-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: admission-leader-election-role
subjects:
- kind: ServiceAccount
  name: admission-controller-manager
  namespace: sealos-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admission-manager-role
subjects:
- kind: ServiceAccount
  name: admission-controller-manager
  namespace: sealos-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admission-proxy-role
subjects:
- kind: ServiceAccount
  name: admission-controller-manager
  namespace: sealos-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: admission
    control-plane: controller-manager
    sealos.io/component: admission-controller-manager
  name: admission-controller-manager-metrics-service
  namespace: sealos-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
    sealos.io/component: admission-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-webhook-service
  namespace: sealos-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
    sealos.io/component: admission-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: admission
    control-plane: controller-manager
    sealos.io/component: admission-controller-manager
  name: admission-controller-manager
  namespace: sealos-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      sealos.io/component: admission-controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        sealos.io/component: admission-controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --ingress-mutating-annotations={{ .ingressMutatingAnnotations }}
        - --domains={{ .domains }}
        command:
        - /manager
        env:
        - name: ICP_ENABLED
          value: '{{ .icpEnabled }}'
        - name: ICP_ENDPOINT
          value: '{{ .icpEndpoint }}'
        - name: ICP_KEY
          value: '{{ .icpKey }}'
        image: ghcr.io/labring/sealos-admission-controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: admission-controller-manager
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "control-plane"
                  operator: In
                  values:
                  - controller-manager
              topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: admission-webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-serving-cert
  namespace: sealos-system
spec:
  dnsNames:
  - admission-webhook-service.sealos-system.svc
  - admission-webhook-service.sealos-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: admission-selfsigned-issuer
  secretName: admission-webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-selfsigned-issuer
  namespace: sealos-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: sealos-system/admission-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-mutating-webhook-configuration
webhooks:
{{ if .ingressWebhookEnabled }}
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: admission-webhook-service
      namespace: sealos-system
      path: /mutate-networking-k8s-io-v1-ingress
  failurePolicy: {{ .ingressWebhookFailurePolicy }}
  name: mingress.sealos.io
  namespaceSelector:
    matchExpressions:
      - key: user.sealos.io/owner
        operator: Exists
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None
{{ end }}
{{ if .namespaceWebhookEnabled }}
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: admission-webhook-service
      namespace: sealos-system
      path: /mutate--v1-namespace
  failurePolicy: {{ .namespaceWebhookFailurePolicy }}
  name: mnamespace.sealos.io
  namespaceSelector:
    matchExpressions:
      - key: user.sealos.io/owner
        operator: Exists
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - namespaces
  sideEffects: None
{{ end }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: sealos-system/admission-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: admission
    app.kubernetes.io/instance: validating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: validatingwebhookconfiguration
    app.kubernetes.io/part-of: admission
    sealos.io/component: admission-controller-manager
  name: admission-validating-webhook-configuration
webhooks:
{{ if .ingressWebhookEnabled }}
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: admission-webhook-service
      namespace: sealos-system
      path: /validate-networking-k8s-io-v1-ingress
  failurePolicy: {{ .ingressWebhookFailurePolicy }}
  name: vingress.sealos.io
  namespaceSelector:
    matchExpressions:
      - key: user.sealos.io/owner
        operator: Exists
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - ingresses
  sideEffects: None
{{ end }}
{{ if .namespaceWebhookEnabled }}
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: admission-webhook-service
      namespace: sealos-system
      path: /validate--v1-namespace
  failurePolicy: {{ .namespaceWebhookFailurePolicy }}
  name: vnamespace.sealos.io
  namespaceSelector:
    matchExpressions:
      - key: user.sealos.io/owner
        operator: Exists
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - namespaces
  sideEffects: None
{{ end }}