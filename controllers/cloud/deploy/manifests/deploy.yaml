apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cloud-controller
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: cloud-controller
    control-plane: controller-manager
  name: cloud-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: launchers.cloud.sealos.io
spec:
  group: cloud.sealos.io
  names:
    kind: Launcher
    listKind: LauncherList
    plural: launchers
    singular: launcher
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Launcher is the Schema for the launchers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LauncherSpec defines the desired state of Launcher
            properties:
              description:
                type: string
              name:
                type: string
            type: object
          status:
            description: LauncherStatus defines the observed state of Launcher
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: licenses.cloud.sealos.io
spec:
  group: cloud.sealos.io
  names:
    kind: License
    listKind: LicenseList
    plural: licenses
    singular: license
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: License is the Schema for the licenses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LicenseSpec defines the desired state of License
            properties:
              key:
                type: string
              token:
                type: string
              uid:
                type: string
            type: object
          status:
            description: LicenseStatus defines the observed state of License
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cloud-controller
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: cloud-controller
  name: cloud-controller-manager
  namespace: cloud-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cloud-controller
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: cloud-controller
  name: cloud-leader-election-role
  namespace: cloud-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cloud-manager-role
rules:
- apiGroups:
  - account.sealos.io
  resources:
  - accounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - account.sealos.io
  resources:
  - accounts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cloud.sealos.io
  resources:
  - cloudsyncs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cloud.sealos.io
  resources:
  - cloudsyncs/finalizers
  verbs:
  - update
- apiGroups:
  - cloud.sealos.io
  resources:
  - cloudsyncs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cloud.sealos.io
  resources:
  - collectors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cloud.sealos.io
  resources:
  - collectors/finalizers
  verbs:
  - update
- apiGroups:
  - cloud.sealos.io
  resources:
  - collectors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cloud.sealos.io
  resources:
  - launchers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cloud.sealos.io
  resources:
  - launchers/finalizers
  verbs:
  - update
- apiGroups:
  - cloud.sealos.io
  resources:
  - launchers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cloud.sealos.io
  resources:
  - licenses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cloud.sealos.io
  resources:
  - licenses/finalizers
  verbs:
  - update
- apiGroups:
  - cloud.sealos.io
  resources:
  - licenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cloud.sealos.io
  resources:
  - notifications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cloud.sealos.io
  resources:
  - notifications/finalizers
  verbs:
  - update
- apiGroups:
  - cloud.sealos.io
  resources:
  - notifications/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - notification.sealos.io
  resources:
  - notifications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cloud-controller
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cloud-controller
  name: cloud-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cloud-controller
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cloud-controller
  name: cloud-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cloud-controller
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: cloud-controller
  name: cloud-leader-election-rolebinding
  namespace: cloud-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cloud-leader-election-role
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: cloud-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cloud-controller
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cloud-controller
  name: cloud-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloud-manager-role
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: cloud-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cloud-controller
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cloud-controller
  name: cloud-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloud-proxy-role
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: cloud-system
---
apiVersion: v1
data:
  config.json: |
    {
      "CollectorURL": "https://anqp0y.laf.dev/CollectorHandle",
      "NotificationURL": "https://anqp0y.laf.dev/NotificationHandle",
      "RegisterURL": "https://anqp0y.laf.dev/RegisterHandle",
      "CloudSyncURL": "https://anqp0y.laf.dev/CloudSyncHandle",
      "LicenseMonitorURL": "https://anqp0y.laf.dev/LicenseMonitor"
    }
kind: ConfigMap
metadata:
  name: cloud-config
  namespace: cloud-system
---
apiVersion: v1
data: null
kind: ConfigMap
metadata:
  name: cloud-license-history
  namespace: cloud-system
---
apiVersion: v1
data:
  canConnectToExternalNetwork: RmFsc2U=
kind: Secret
metadata:
  name: cloud-env
  namespace: cloud-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cloud-controller
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: cloud-controller
    control-plane: controller-manager
  name: cloud-controller-manager-metrics-service
  namespace: cloud-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cloud-controller
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: cloud-controller
    control-plane: controller-manager
  name: cloud-controller-manager
  namespace: cloud-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: CAN_CONNECT_TO_EXTERNAL_NETWORK
          valueFrom:
            secretKeyRef:
              key: canConnectToExternalNetwork
              name: cloud-env
        image: ghcr.io/labring/sealos-cloud-controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cloud-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: cloud.sealos.io/v1
kind: Launcher
metadata:
  labels:
    external-network-access: disabled
  name: cloud-start
  namespace: cloud-system
spec:
  description: This YAML file is responsible for launching the entire cloud module.
  name: Cloud-Launcher
