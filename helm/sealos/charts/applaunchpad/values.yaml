global:
  cloud:
    domain: cloud.local
    port: ""
    mongodbURI: ""
  ingress:
    enabled: true
    tls: true
    selfSigned: true
  wildcardCert:
    name: "wildcard-tls"
    enabled: true

commonLabels: { }
commonAnnotations: { }


applaunchpad:
  ## @param applaunchpad.domain set domain for applaunchpad, default is empty, use cloud domain as applaunchpad.domain
  domain: ""

  ## @param applaunchpad.ingressSecret set ingress secret for applaunchpad's apps
  ingressSecret: ""

  ## @param applaunchpad.fastgptKey set fastgpt key for applaunchpad
  fastgptKey: ""

  ## sealos applaunchpad image
  ## ref: https://github.com/labring/sealos/pkgs/container/sealos-applaunchpad-frontend/
  ## @param applaunchpad.image.registry applaunchpad image registry
  ## @param applaunchpad.image.repository applaunchpad image repository
  ## @param applaunchpad.image.tag applaunchpad image tag (immutable tags are recommended)
  ## @param applaunchpad.image.digest applaunchpad image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param applaunchpad.image.pullPolicy applaunchpad image pull policy
  ## @param applaunchpad.image.pullSecrets applaunchpad image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: labring/sealos-applaunchpad-frontend
    tag: latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: [ ]
  replicaCount: 1
  containerPorts:
    http: 3000
  ## Configure extra options for applaunchpad containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param applaunchpad.livenessProbe.enabled Enable livenessProbe on applaunchpad containers
  ## @param applaunchpad.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param applaunchpad.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param applaunchpad.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param applaunchpad.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param applaunchpad.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: false
    initialDelaySeconds: foo
    periodSeconds: bar
    timeoutSeconds: foo
    failureThreshold: bar
    successThreshold: foo
  ## @param applaunchpad.readinessProbe.enabled Enable readinessProbe on applaunchpad containers
  ## @param applaunchpad.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param applaunchpad.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param applaunchpad.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param applaunchpad.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param applaunchpad.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: foo
    periodSeconds: bar
    timeoutSeconds: foo
    failureThreshold: bar
    successThreshold: foo
  ## @param applaunchpad.startupProbe.enabled Enable startupProbe on applaunchpad containers
  ## @param applaunchpad.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param applaunchpad.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param applaunchpad.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param applaunchpad.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param applaunchpad.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: foo
    periodSeconds: bar
    timeoutSeconds: foo
    failureThreshold: bar
    successThreshold: foo
  ## @param applaunchpad.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: { }
  ## @param applaunchpad.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: { }
  ## @param applaunchpad.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: { }
  ## applaunchpad resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param applaunchpad.resources.limits The resources limits for the applaunchpad containers
  ## @param applaunchpad.resources.requests The requested resources for the applaunchpad containers
  ##
  resources:
    limits: { }
    requests: { }
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param applaunchpad.podSecurityContext.enabled Enabled applaunchpad pods' Security Context
  ## @param applaunchpad.podSecurityContext.fsGroup Set applaunchpad pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param applaunchpad.containerSecurityContext.enabled Enabled applaunchpad containers' Security Context
  ## @param applaunchpad.containerSecurityContext.runAsUser Set applaunchpad containers' Security Context runAsUser
  ## @param applaunchpad.containerSecurityContext.runAsNonRoot Set applaunchpad containers' Security Context runAsNonRoot
  ## @param applaunchpad.containerSecurityContext.readOnlyRootFilesystem Set applaunchpad containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - "ALL"

  ## @param applaunchpad.existingConfigmap The name of an existing ConfigMap with your custom configuration for applaunchpad
  ##
  existingConfigmap:
  ## @param applaunchpad.command Override default container command (useful when using custom images)
  ##
  command: [ ]
  ## @param applaunchpad.args Override default container args (useful when using custom images)
  ##
  args: [ ]
  ## @param applaunchpad.hostAliases applaunchpad pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: [ ]
  ## @param applaunchpad.podLabels Extra labels for applaunchpad pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: { }
  ## @param applaunchpad.podAnnotations Annotations for applaunchpad pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: { }
  ## @param applaunchpad.podAffinityPreset Pod affinity preset. Ignored if `applaunchpad.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param applaunchpad.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `applaunchpad.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param applaunchpad.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param applaunchpad.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param applaunchpad.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param applaunchpad.autoscaling.enabled Enable autoscaling for applaunchpad
  ## @param applaunchpad.autoscaling.minReplicas Minimum number of applaunchpad replicas
  ## @param applaunchpad.autoscaling.maxReplicas Maximum number of applaunchpad replicas
  ## @param applaunchpad.autoscaling.targetCPU Target CPU utilization percentage
  ## @param applaunchpad.autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: false
    minReplicas: ""
    maxReplicas: ""
    targetCPU: ""
    targetMemory: ""
  ## Node applaunchpad.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param applaunchpad.nodeAffinityPreset.type Node affinity preset type. Ignored if `applaunchpad.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param applaunchpad.nodeAffinityPreset.key Node label key to match. Ignored if `applaunchpad.affinity` is set
    ##
    key: ""
    ## @param applaunchpad.nodeAffinityPreset.values Node label values to match. Ignored if `applaunchpad.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: [ ]
  ## @param applaunchpad.affinity Affinity for applaunchpad pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `applaunchpad.podAffinityPreset`, `applaunchpad.podAntiAffinityPreset`, and `applaunchpad.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: { }
  ## @param applaunchpad.nodeSelector Node labels for applaunchpad pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: { }
  ## @param applaunchpad.tolerations Tolerations for applaunchpad pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: [ ]
  ## @param applaunchpad.updateStrategy.type applaunchpad statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## ONLY FOR STATEFULSETS
  ## @param applaunchpad.podManagementPolicy Statefulset Pod management policy, it needs to be Parallel to be able to complete the cluster join
  ## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy: OrderedReady

  ## @param applaunchpad.priorityClassName applaunchpad pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param applaunchpad.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: [ ]
  ## @param applaunchpad.schedulerName Name of the k8s scheduler (other than default) for applaunchpad pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param applaunchpad.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param applaunchpad.lifecycleHooks for the applaunchpad container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: { }
  ## @param applaunchpad.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for applaunchpad nodes
  ##
  extraEnvVarsCM: ""
  ## @param applaunchpad.extraEnvVarsSecret Name of existing Secret containing extra env vars for applaunchpad nodes
  ##
  extraEnvVarsSecret: ""
  ## @param applaunchpad.extraVolumes Optionally specify extra list of additional volumes for the applaunchpad pod(s)
  ##
  sidecars: [ ]
  ## @param applaunchpad.initContainers Add additional init containers to the applaunchpad pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: [ ]

## @section Traffic Exposure Parameters
##

## applaunchpad service parameters
##
service:
  ## @param service.type applaunchpad service type
  ##
  type: ClusterIP
  ## @param service.ports.http applaunchpad service HTTP port
  ## @param service.ports.https applaunchpad service HTTPS port
  ##
  ports:
    http: 3000
  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## @param service.nodePorts.https Node port for HTTPS
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http: ""
  ## @param service.clusterIP applaunchpad service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP applaunchpad service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges applaunchpad service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: [ ]
  ## @param service.externalTrafficPolicy applaunchpad service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for applaunchpad service
  ##
  annotations: { }
  ## @param service.extraPorts Extra ports to expose in applaunchpad service (normally used with the `sidecars` value)
  ##
  extraPorts: [ ]
  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: { }
## applaunchpad ingress parameters
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for applaunchpad
  ##
  enabled: false
  ## @param ingress.pathType Ingress path type
  ##
  pathType: Prefix
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: networking.k8s.io/v1
  ## /* @param ingress.hostname Default host for the ingress record */
  ## Use applaunchpad.domain instead
  #  hostname: cloud.local
  ## @param ingress.ingressClassName IngressClass that will be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster.
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: nginx
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /()(.*)
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_clear_headers "X-Frame-Options:";
      more_set_headers "Content-Security-Policy: default-src * blob: data: *.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} {{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }}; img-src * data: blob: resource: *.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} {{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }}; connect-src * wss: blob: resource:; style-src 'self' 'unsafe-inline' blob: *.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} {{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} resource:; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: *.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} {{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} resource: *.baidu.com *.bdstatic.com; frame-src 'self' *.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} {{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} mailto: tel: weixin: mtt: *.baidu.com; frame-ancestors 'self' https://{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} https://*.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }}";
      more_set_headers "X-Xss-Protection: 1; mode=block";
    higress.io/response-header-control-remove: X-Frame-Options
    higress.io/response-header-control-update: |
      Content-Security-Policy "default-src * blob: data: *.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} {{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }}; img-src * data: blob: resource: *.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} {{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }}; connect-src * wss: blob: resource:; style-src 'self' 'unsafe-inline' blob: *.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} {{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} resource:; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: *.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} {{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} resource: *.baidu.com *.bdstatic.com; frame-src 'self' *.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} {{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} mailto: tel: weixin: mtt: *.baidu.com; frame-ancestors 'self' https://{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }} https://*.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }}"
      X-Xss-Protection "1; mode=block"
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: true
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: [ ]

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: { }
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true