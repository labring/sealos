# Default values for openebs-zfslocalpv.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
release:
  version: "2.4.0"

imagePullSecrets:
# - name: "image-pull-secret"

feature:
  # enable storage capacity tracking feature
  # Ref: https://kubernetes:io/docs/concepts/storage/storage-capacity
  storageCapacity: true

rbac:
  # rbac.pspEnabled: `true` if PodSecurityPolicy resources should be created
  pspEnabled: false

# zfsNode contains the configurables for
# the zfs node daemonset
zfsNode:
  componentName: openebs-zfs-node
  driverRegistrar:
    name: "csi-node-driver-registrar"
    image:
      # Make sure that registry name end with a '/'.
      # For example : registry.k8s.io/ is a correct value here and quay.io is incorrect
      registry: registry.k8s.io/
      repository: sig-storage/csi-node-driver-registrar
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: v2.8.0
  updateStrategy:
    type: RollingUpdate
  annotations: {}
  podAnnotations: {}
  resources: {}
  # This can be configured to run on various different k8s distributions like
  # microk8s where kubelet dir is different
  kubeletDir: "/var/lib/kubelet/"
  encrKeysDir: "/home/keys"
  # limits:
  #   cpu: 10m
  #   memory: 32Mi
  # requests:
  #   cpu: 10m
  #   memory: 32Mi
  ## Labels to be added to openebs-zfs node pods
  podLabels: {}
  nodeSelector: {}
  tolerations: []
  securityContext: {}
  labels: {}
  priorityClass:
    create: true
    name: zfs-csi-node-critical
  # allowed topologykeys for csi driver
  # The desired comma separated keys can be added here,
  # by default all the node label keys are allowed.
  # For example:
  # allowedTopologyKeys: "kubernetes.io/hostname,openebs.io/rack"
  allowedTopologyKeys: "All"
  initContainers: []
  additionalVolumes: []

# zfsController contains the configurables for
# the zfs controller statefulset
zfsController:
  componentName: openebs-zfs-controller
  initContainers: []
  additionalVolumes: []
  replicas: 1
  serviceName: openebs-zfs
  resizer:
    name: "csi-resizer"
    image:
      # Make sure that registry name end with a '/'.
      # For example : registry.k8s.io/ is a correct value here and quay.io is incorrect
      registry: registry.k8s.io/
      repository: sig-storage/csi-resizer
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.8.0
  snapshotter:
    name: "csi-snapshotter"
    image:
      # Make sure that registry name end with a '/'.
      # For example : registry.k8s.io/ is a correct value here and quay.io is incorrect
      registry: registry.k8s.io/
      repository: sig-storage/csi-snapshotter
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: v6.2.2
  snapshotController:
    name: "snapshot-controller"
    image:
      # Make sure that registry name end with a '/'.
      # For example : registry.k8s.io/ is a correct value here and quay.io is incorrect
      registry: registry.k8s.io/
      repository: sig-storage/snapshot-controller
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: v6.2.2
  provisioner:
    name: "csi-provisioner"
    image:
      # Make sure that registry name end with a '/'.
      # For example : registry.k8s.io/ is a correct value here and quay.io is incorrect
      registry: registry.k8s.io/
      repository: sig-storage/csi-provisioner
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: v3.5.0
  updateStrategy:
    type: RollingUpdate
  annotations: {}
  podAnnotations: {}
  resources: {}
  # limits:
  #   cpu: 10m
  #   memory: 32Mi
  # requests:
  #   cpu: 10m
  #   memory: 32Mi
  ## Labels to be added to openebs-zfs controller pods
  podLabels:
    name: openebs-zfs-controller
  nodeSelector: {}
  tolerations: []
  securityContext: {}
  priorityClass:
    create: true
    name: zfs-csi-controller-critical


# zfsPlugin is the common csi container used by the
# controller statefulset and node daemonset
zfsPlugin:
  name: "openebs-zfs-plugin"
  image:
    # Make sure that registry name end with a '/'.
    # For example : registry.k8s.io/ is a correct value here and quay.io is incorrect
    registry:
    repository: openebs/zfs-driver
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 2.4.0

role: openebs-zfs

crd:
  enableInstall: true
  # Specify installation of the kubernetes-csi volume snapshot CRDs if your Kubernetes distribution
  # or another storage operator already manages them.
  volumeSnapshot: true
serviceAccount:
  zfsController:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: openebs-zfs-controller-sa
  zfsNode:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: openebs-zfs-node-sa

analytics:
  enabled: true
zfs:
  # If you use a non-standard path to the zfs binary, specify it here
  # bin: /run/current-system/sw/bin/zfs
  bin: zfs
