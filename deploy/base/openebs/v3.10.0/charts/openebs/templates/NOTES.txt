
Successfully installed OpenEBS.

Check the status by running: kubectl get pods -n {{ .Release.Namespace }}

The default values will install NDM and enable OpenEBS hostpath and device
storage engines along with their default StorageClasses. Use `kubectl get sc`
to see the list of installed OpenEBS StorageClasses.

**Note**: If you are upgrading from the older helm chart that was using cStor
and Jiva (non-csi) volumes, you will have to run the following command to include
the older provisioners:

helm upgrade {{ .Release.Name }} openebs/openebs \
	--namespace {{ .Release.Namespace }} \
	--set legacy.enabled=true \
	--reuse-values

For other engines, you will need to perform a few more additional steps to
enable the engine, configure the engines (e.g. creating pools) and create 
StorageClasses. 

For example, cStor can be enabled using commands like:

helm upgrade {{ .Release.Name }} openebs/openebs \
	--namespace {{ .Release.Namespace }} \
	--set cstor.enabled=true \
	--reuse-values

For more information, 
- view the online documentation at https://openebs.io/docs or
- connect with an active community on Kubernetes slack #openebs channel.
{{- /*
The section below can be removed once enableDeviceClass and enableHostpathClass
options are removed.
*/}}
{{ if or (eq .Values.localprovisioner.enableHostpathClass false) (eq .Values.localprovisioner.enableDeviceClass false) }}

DEPRECATION NOTICE:
-------------------
The options 'enableHostpathClass' and 'enableDeviceClass' are deprecated and
will be removed in future releases.

Please use the options hostpathClass.enabled and deviceClass.enabled instead.

Example:

helm install {{ .Release.Name }} openebs/openebs \
	--namespace {{ .Release.Namespace }} \
	--set localprovisioner.deviceClass.enabled="false"

{{ end }}

