apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: hub-service
  name: hub-service-system
---
apiVersion: v1
data:
  config.yml: |
    server:
      addr: ":5001"
    token:
      issuer: "registry-token-issuer"
      expiration: 2592000  #30days
      certificate: "/config/tls.crt"
      key: "/config/tls.key"
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN RSA PRIVATE KEY-----
    -----END RSA PRIVATE KEY-----
kind: ConfigMap
metadata:
  labels:
    app: hub-service
  name: hub-service-config
  namespace: hub-service-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hub-service-deployment
  namespace: hub-service-system
  labels:
    app: hub-service
spec:
  selector:
    matchLabels:
      app: hub-service
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: hub-service
    spec:
      volumes:
        - name: config-vol
          configMap:
            name: hub-service-config
        - name: cert-vol
      containers:
        - name: hub-service-server
          image: lingdie/sealos-hub-service:dev
          env:
          - name: KUBERNETES_SERVICE_HOST
            value: "10.96.0.1"
          - name: KUBERNETES_SERVICE_PORT
            value: "443"
          ports:
            - containerPort: 5001
          args:
          - /config/config.yml
          command:
            - /manager
          securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
              runAsNonRoot: true
          imagePullPolicy: Always
          volumeMounts:
            - name: config-vol
              mountPath: /config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hub-service
  name: hub-service-manager
  namespace: hub-service-system
spec:
  ports:
    - name: http
      port: 5001
      protocol: TCP
      targetPort: 5001
  selector:
    app: hub-service
---
apiVersion: v1
kind: Secret
metadata:
  name: hub-service-ingress-tls
  namespace: hub-service-system
type: kubernetes.io/tls
data:
  tls.crt: | 
    ...
  tls.key: |
    ...
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hub-service-ingress
  namespace: hub-service-system
  labels:
    app: hub-service
spec:
  rules:
    - host: hubauth.login.sealos.io
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: hub-service-manager
                port:
                  number: 5001
  tls:
    - hosts:
        - hubauth.login.sealos.io
      secretName: hub-service-ingress-tls

